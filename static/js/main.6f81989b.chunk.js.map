{"version":3,"sources":["assets/images/me.jpg","components/navbar/navbar.js","containers/myProfile/myProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navItemLists","id","display","link","isInternal","NavbarComponent","props","onClickNavItem","item","history","push","setState","active","window","open","state","className","map","navItemClass","key","join","onClick","Component","withRouter","MyProfile","loading","style","width","height","backgroundColor","position","top","left","src","myImage","margin","App","exact","path","component","myProfile","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gC,iQCIrCC,G,MAAe,CACnB,CACEC,GAAI,aACJC,QAAS,aACTC,KAAM,IACNC,YAAY,GAEd,CACEH,GAAI,OACJC,QAAS,OACTC,KAAM,QACNC,YAAY,GAEd,CACEH,GAAI,SACJC,QAAS,SACTC,KAAM,2CACNC,YAAY,KAIVC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,eAAiB,SAACC,GACZA,EAAKJ,YACP,EAAKE,MAAMG,QAAQC,KAAKF,EAAKL,MAC7B,EAAKQ,SAAS,CAAEC,OAAQJ,EAAKP,MAE7BY,OAAOC,KAAKN,EAAKL,KAAM,WAVzB,EAAKY,MAAQ,CACXH,OAAQ,cAHO,E,qDAgBT,IAAD,OACP,OACE,yBAAKI,UAAU,eACb,yBAAKA,UAAU,UAEXhB,EAAaiB,KAAI,SAAAT,GACf,IAAIU,EAAe,CAAC,YAIpB,OAHIV,EAAKP,KAAO,EAAKc,MAAMH,QACzBM,EAAaR,KAAK,UAEb,yBAAKS,IAAKX,EAAKP,GAAIe,UAAWE,EAAaE,KAAK,KAAMC,QAAS,kBAAM,EAAKd,eAAeC,KAAQA,EAAKN,kB,GA5B7FoB,aAqCfC,cAAWlB,G,yBCOXmB,E,4MAhEbT,MAAQ,CAAEU,SAAS,G,uDAGjB,OACE,yBAAKT,UAAU,mBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SAAf,mBAAwC,UACxC,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAf,wBAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAf,UACA,gDACA,wGACA,sHACA,wEACA,+EAGJ,yBAAKA,UAAU,cACb,yBAAKU,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,gBAAiB,aAChE,yBAAKH,MAAO,CAAEI,SAAU,WAAYC,IAAK,OAAQC,KAAM,QAAUL,MAAM,MAAMC,OAAO,MAAMK,IAAKC,QAGnG,yBAAKlB,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAf,cAEF,yBAAKA,UAAU,cACb,0EACA,oEACA,yCAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAf,oBAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,kBAAf,iCACA,6EACA,8EAGJ,yBAAKU,MAAO,CAAEC,MAAO,MAAOQ,OAAQ,SAAUN,gBAAiB,aAC/D,yBAAKb,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,kBAAf,6CACA,4EACA,qFAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,kBAAf,4CACA,uEACA,oH,GAvDUM,aCOT,SAASc,IACtB,OACE,yBAAKpB,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,YACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,cAAcC,UAAWC,QCNnCC,QACW,cAA7B5B,OAAO6B,SAASC,UAEe,UAA7B9B,OAAO6B,SAASC,UAEhB9B,OAAO6B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f81989b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.ae1af886.jpg\";","import React, { Component } from 'react'\r\nimport \"./navbar.scss\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst navItemLists = [\r\n  {\r\n    id: 'my-profile',\r\n    display: 'MY PROFILE',\r\n    link: '/',\r\n    isInternal: true\r\n  },\r\n  {\r\n    id: 'demo',\r\n    display: 'DEMO',\r\n    link: '/demo',\r\n    isInternal: true\r\n  },\r\n  {\r\n    id: 'github',\r\n    display: 'GITHUB',\r\n    link: 'https://github.com/mooksarida/my-profile',\r\n    isInternal: false\r\n  }\r\n];\r\n\r\nclass NavbarComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: 'my-profile'\r\n    }\r\n  }\r\n\r\n  onClickNavItem = (item) => {\r\n    if (item.isInternal) {\r\n      this.props.history.push(item.link);\r\n      this.setState({ active: item.id });\r\n    } else {\r\n      window.open(item.link, \"_blank\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-wrap\">\r\n        <div className=\"navbar\">\r\n          {\r\n            navItemLists.map(item => {\r\n              let navItemClass = ['nav-item'];\r\n              if (item.id === this.state.active) {\r\n                navItemClass.push('active');\r\n              }\r\n              return <div key={item.id} className={navItemClass.join(' ')} onClick={() => this.onClickNavItem(item)}>{item.display}</div>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavbarComponent); ","import React, { Component } from 'react';\r\nimport './myProfile.scss';\r\nimport myImage from '../../assets/images/me.jpg';\r\n\r\nclass MyProfile extends Component {\r\n  state = { loading: true };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"my-profile-wrap\">\r\n        <div className=\"block\">\r\n          <div className=\"text-wrap\">\r\n            <div className=\"title\">SARIDA JONGBURI {'<' + 'MOOK' + '>'}</div>\r\n            <div className=\"text-group\">\r\n              <div className=\"sub-title\">Front-end Developer</div>\r\n            </div>\r\n            <div className=\"text-group\">\r\n              <div className=\"sub-title\">Skills</div>\r\n              <p>Databases : MySQL</p>\r\n              <p>Programing Languages : JavaScript, TypeScript, Java, Php, HTML, CSS, SCSS</p>\r\n              <p>Framework or Library : React (Usage with Redux), Angular, Node.js, Express, Spring boot</p>\r\n              <p>UI : Material-UI, Bootstrap, Chart.js, D3</p>\r\n              <p>Others : Responsive, Git, Basic Linux commands</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-wrap\">\r\n            <div style={{ width: \"500px\", height: \"360px\", backgroundColor: \"#1F2833\" }}></div>\r\n            <img style={{ position: \"absolute\", top: \"40px\", left: \"40px\" }} width=\"500\" height=\"360\" src={myImage} />\r\n          </div>\r\n        </div>\r\n        <div className=\"block\">\r\n          <div className=\"text-wrap\">\r\n            <div className=\"text-group\">\r\n              <div className=\"sub-title\">Education</div>\r\n            </div>\r\n            <div className=\"text-group\">\r\n              <p>Prince of Songkla University Hat Yai Campus</p>\r\n              <p>Faculty of Science (Computer Science)</p>\r\n              <p>GPA: 3.16</p>\r\n            </div>\r\n            <div className=\"text-group\">\r\n              <div className=\"sub-title\">Work Experience</div>\r\n            </div>\r\n            <div className=\"text-group\">\r\n              <div className=\"text-highlight\">INTERNSHIP (G-ABLE CO., LTD.)</div>\r\n              <p>Timeless Ensembles : May 2018 – July 2018</p>\r\n              <p>Developed web application (React and Node.js)</p>\r\n            </div>\r\n          </div>\r\n          <div style={{ width: \"5px\", margin: \"0 20px\", backgroundColor: \"#66fcf1\" }}></div>\r\n          <div className=\"text-wrap\">\r\n            <div className=\"text-group\">\r\n              <div className=\"text-highlight\">FRONT END DEVELOPER (TECHNIMAL CO., LTD.)</div>\r\n              <p>Timeless Ensembles : Jun 2019 – Jan 2020</p>\r\n              <p>Developed web application for industrial Iot. (React)</p>\r\n            </div>\r\n            <div className=\"text-group\">\r\n              <div className=\"text-highlight\">APPLICATION DEVELOPER (G-ABLE CO., LTD.)</div>\r\n              <p>Timeless Ensembles : Feb 2020 – Now</p>\r\n              <p>Developed web application for data analytics platform. (Angular, Spring boot)</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyProfile; ","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.scss';\nimport NavbarComponent from './components/navbar/navbar';\nimport myProfile from './containers/myProfile/myProfile';\n\nexport default function App() {\n  return (\n    <div className=\"app-wrap\">\n      <Router>\n        <NavbarComponent />\n        <div className=\"app-body\">\n          <Switch>\n            <Route exact path=\"/my-profile\" component={myProfile} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}